name: "Release Gosh"

on:
  push:
    branches:
      - master
defaults:
  run:
    shell: bash
jobs:
  release:
    outputs:
      version: ${{steps.semantic.outputs.new_release_version}}
      release_created: ${{steps.semantic.outputs.new_release_published}}
      release_upload_url: ${{steps.create_release.outputs.upload_url}}
    runs-on: ubuntu-latest
    container:
      image: node:12.18.1-buster
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: npm install conventional-changelog-conventionalcommits
      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v2
        with:
          semantic_version: 17.3.7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        if: ${{steps.semantic.outputs.new_release_published}}
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ steps.semantic.outputs.new_release_version }}
          name: ${{ steps.semantic.outputs.new_release_version }}
          body: ${{ steps.semantic.outputs.new_release_notes }}
          token: ${{ secrets.GITHUB_TOKEN }}

  upload_artifacts:
    needs: release
    runs-on: ubuntu-latest
    if: ${{ needs.release.outputs.release_created }}
    strategy:
      matrix:
        goos: [ linux, darwin, windows ]
        goarch: [ amd64 ]
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Asset name
        id: artifact
        run: |
          if [[ "${{ matrix.goos }}" == "windows" ]]; then
            artifact="gosh-${{ matrix.goos }}-${{ matrix.goarch }}.exe"
            echo "::set-output name=name::$artifact"
          else
            artifact="gosh-${{ matrix.goos }}-${{ matrix.goarch }}"
            echo "::set-output name=name::$artifact"
          fi
      - name: Build
        id: build
        run: go build -o bin/${{ steps.artifact.outputs.name }} -ldflags="-X 'main.Version=${{ needs.release.outputs.version }}'"
        env:
          GOARCH: ${{ matrix.goarch }}
          GOOS: ${{ matrix.goos }}
      - name: Hash
        id: hash
        run: |
          fileHash=$(sha256sum bin/${{ steps.artifact.outputs.name }})
          echo $fileHash > bin/${{ steps.artifact.outputs.name }}.sha256
          echo "::set-output name=hash_${{ matrix.goos }}::$fileHash"
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }}
          asset_path: bin/${{ steps.artifact.outputs.name }}
          asset_name: ${{ steps.artifact.outputs.name }}
          asset_content_type: application/octet-stream
      - name: Upload Hash Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }}
          asset_path: bin/${{ steps.artifact.outputs.name }}.sha256
          asset_name: ${{ steps.artifact.outputs.name }}.sha256
          asset_content_type: text/plain
