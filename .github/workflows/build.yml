name: Build Gosh

on:
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16.3'

      - name: Install dependencies
        run: |
          go mod download

      - name: Run vetting/linting
        run: |
          go vet -json -c=3 . > vet-results.json

      - name: Run testing
        run: go test -json ./... > test-results.json

      - name: Upload Reports
        uses: actions/upload-artifact@v2
        with:
          name: Reports
          path: |
            test-results.json
            vet-results.json
        if: always()

  artifacts:
    needs: test
    strategy:
      matrix:
        goos: [ linux, darwin, windows ]
        goarch: [ amd64 ]
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Asset name
        id: artifact
        run: |
          if [[ "${{ matrix.goos }}" eq "windows" ]]; then
            $artifact = "gosh-${{ matrix.goos }}-${{ matrix.goarch }}.exe"
            echo "::set-output name=name::$artifact"
          else
            $artifact = "gosh-${{ matrix.goos }}-${{ matrix.goarch }}"
            echo "::set-output name=name::$artifact"
          fi
      - name: Build
        id: build
        run: go build -o bin/${{ steps.artifact.outputs.name }} -ldflags="-X 'main.Version=${{ needs.release.outputs.version }}'"
        env:
          GOARCH: ${{ matrix.goarch }}
          GOOS: ${{ matrix.goos }}
      - name: Hash
        id: hash
        run: |
          $fileHash = sha256sum ${{ steps.artifact.outputs.name }}
          echo $fileHash > bin/${{ steps.artifact.outputs.name }}.sha256
          echo "::set-output name=hash_${{ matrix.goos }}::$fileHash"
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Binaries
          path: |
            bin/*.*
